_id: spc_94c27d52f2724c829c7ab5419846604f
type: ApiSpec
parentId: wrk_67708ee63cea4d7492d840f0cd46a1ff
modified: 1683461708315
created: 1662152358665
fileName: New Document
contents: >
  {
    "components": {
      "schemas": {
        "BaseEntity": {
          "properties": {
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object"
        },
        "Point": {
          "properties": {
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ]
        },
        "UserProfile": {
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "id": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "type",
            "id"
          ]
        },
        "Badge": {
          "properties": {
            "name": {
              "type": "string"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "name"
          ]
        },
        "PriceRange": {
          "properties": {
            "from": {
              "type": "number"
            },
            "to": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "from",
            "to"
          ]
        },
        "Service": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "briefDescription": {
              "type": "string"
            },
            "timeMin": {
              "maximum": 999,
              "type": "number",
              "minimum": 0
            },
            "timeMax": {
              "maximum": 999,
              "type": "number",
              "minimum": 0
            },
            "priceMin": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "priceMax": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "contraindications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "indications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "archived": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "name",
            "description",
            "briefDescription",
            "timeMin",
            "timeMax",
            "priceMin",
            "priceMax",
            "contraindications",
            "indications"
          ]
        },
        "ProfessionalService": {
          "properties": {
            "service": {
              "$ref": "#/components/schemas/Service"
            },
            "professional": {
              "$ref": "#/components/schemas/Professional"
            },
            "price": {
              "pattern": "^[-+]?[0-9]+$",
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "archived": {
              "type": "boolean"
            },
            "time": {
              "type": "number"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "service",
            "professional",
            "price",
            "archived"
          ]
        },
        "Professional": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "preferenceGender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "mobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "mobilityDistance": {
              "$ref": "#/components/schemas/DistanceEnum"
            },
            "renewPlan": {
              "type": "boolean"
            },
            "registerCompletedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "isRegisterCompleted": {
              "type": "boolean",
              "readOnly": true
            },
            "photos": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "services": {
              "items": {
                "$ref": "#/components/schemas/ProfessionalService"
              },
              "type": "array"
            },
            "proposal": {
              "$ref": "#/components/schemas/Proposal"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRange"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "user",
            "preferenceGender",
            "mobility",
            "renewPlan",
            "isRegisterCompleted",
            "priceRange"
          ]
        },
        "Request": {
          "properties": {
            "requester": {
              "$ref": "#/components/schemas/Client"
            },
            "gender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "mobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "mobilityDistance": {
              "$ref": "#/components/schemas/DistanceEnum"
            },
            "status": {
              "$ref": "#/components/schemas/RequestStatus"
            },
            "autoFinishTime": {
              "format": "date-time",
              "type": "string"
            },
            "massagesServices": {
              "items": {
                "$ref": "#/components/schemas/Service"
              },
              "type": "array"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "requester",
            "gender",
            "mobility",
            "status",
            "autoFinishTime",
            "massagesServices"
          ]
        },
        "Response": {
          "properties": {
            "request": {
              "$ref": "#/components/schemas/Request"
            },
            "responser": {
              "$ref": "#/components/schemas/Professional"
            },
            "status": {
              "$ref": "#/components/schemas/ResponseStatus"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "request",
            "responser",
            "status"
          ]
        },
        "BaseMessage": {
          "properties": {
            "content": {
              "type": "string"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bySystem": {
              "type": "boolean"
            },
            "data": {},
            "visibleOnlyTo": {
              "type": "number"
            },
            "me": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "content",
            "bySystem",
            "me"
          ]
        },
        "Message": {
          "properties": {
            "proposal": {
              "$ref": "#/components/schemas/Proposal"
            },
            "rating": {
              "$ref": "#/components/schemas/Rating"
            },
            "from": {
              "$ref": "#/components/schemas/User"
            },
            "to": {
              "$ref": "#/components/schemas/User"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "content": {
              "type": "string"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bySystem": {
              "type": "boolean"
            },
            "data": {},
            "visibleOnlyTo": {
              "type": "number"
            },
            "me": {
              "type": "boolean"
            }
          },
          "type": "object",
          "required": [
            "from",
            "to",
            "content",
            "bySystem",
            "me"
          ]
        },
        "Rating": {
          "properties": {
            "from": {
              "$ref": "#/components/schemas/User"
            },
            "to": {
              "$ref": "#/components/schemas/User"
            },
            "response": {
              "$ref": "#/components/schemas/Response"
            },
            "proposal": {
              "$ref": "#/components/schemas/Proposal"
            },
            "message": {
              "$ref": "#/components/schemas/Message"
            },
            "rating": {
              "$ref": "#/components/schemas/RatingEnum"
            },
            "ratingDetails": {
              "type": "string"
            },
            "badges": {
              "items": {
                "$ref": "#/components/schemas/Badge"
              },
              "type": "array"
            },
            "reviewed": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "from",
            "to",
            "rating",
            "reviewed"
          ]
        },
        "RatingStats": {
          "properties": {
            "average": {
              "type": "number"
            },
            "higher": {
              "$ref": "#/components/schemas/Rating"
            },
            "lower": {
              "$ref": "#/components/schemas/Rating"
            },
            "ratings": {
              "items": {
                "$ref": "#/components/schemas/Rating"
              },
              "type": "array"
            },
            "count": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "average",
            "ratings"
          ]
        },
        "Address": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "geolocation": {
              "$ref": "#/components/schemas/Point"
            },
            "type": {
              "type": "string"
            },
            "cep": {
              "type": "string",
              "x-faker": "address.zipCode"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "adjunct": {
              "type": "string"
            },
            "neighborhood": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "maxLength": 2,
              "type": "string",
              "minLength": 2
            }
          },
          "type": "object",
          "required": [
            "cep",
            "street",
            "city",
            "state"
          ]
        },
        "Document": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "type": {
              "$ref": "#/components/schemas/DocumentType"
            },
            "files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "status": {
              "$ref": "#/components/schemas/DocumentStatus"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "user",
            "type",
            "files",
            "status"
          ]
        },
        "Card": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "token": {
              "type": "string"
            },
            "holder": {
              "type": "string"
            },
            "cardNumber": {
              "pattern": "^[-+]?[0-9]+$",
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/EnumCardType"
            },
            "brand": {
              "$ref": "#/components/schemas/EnumCardBrands"
            },
            "expires": {
              "type": "string"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "user",
            "token",
            "holder",
            "cardNumber",
            "type",
            "brand",
            "expires"
          ]
        },
        "Invoice": {
          "properties": {
            "subscription": {
              "$ref": "#/components/schemas/Subscription"
            },
            "paymentId": {
              "type": "string"
            },
            "transactionId": {
              "type": "string"
            },
            "proofOfSale": {
              "type": "string"
            },
            "authorizationCode": {
              "type": "string"
            },
            "status": {
              "$ref": "#/components/schemas/TransactionStatus"
            },
            "paid": {
              "type": "boolean"
            },
            "dueDate": {
              "format": "date-time",
              "type": "string"
            },
            "paidAt": {
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "subscription",
            "paymentId",
            "transactionId",
            "status",
            "paid",
            "dueDate"
          ]
        },
        "Plan": {
          "properties": {
            "temporary": {
              "type": "boolean"
            },
            "amount": {
              "pattern": "^[-+]?[0-9]+$",
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "interval": {
              "$ref": "#/components/schemas/EnumRecurrentPaymentInterval"
            },
            "title": {
              "type": "string"
            },
            "forUser": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "saleAmount": {
              "pattern": "^[-+]?[0-9]+$",
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "saleExpiresAt": {
              "format": "date-time",
              "type": "string"
            },
            "disabled": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "temporary",
            "amount",
            "interval",
            "forUser",
            "disabled"
          ]
        },
        "Subscription": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "plan": {
              "$ref": "#/components/schemas/Plan"
            },
            "order": {
              "type": "string"
            },
            "card": {
              "$ref": "#/components/schemas/Card"
            },
            "started": {
              "format": "date-time",
              "type": "string"
            },
            "expires": {
              "format": "date-time",
              "type": "string"
            },
            "recurrentPaymentId": {
              "type": "string"
            },
            "active": {
              "type": "boolean"
            },
            "onSale": {
              "type": "boolean"
            },
            "amount": {
              "pattern": "^[-+]?[0-9]+$",
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "status": {
              "$ref": "#/components/schemas/RecurrencyStatus"
            },
            "invoices": {
              "items": {
                "$ref": "#/components/schemas/Invoice"
              },
              "type": "array"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "user",
            "plan",
            "order",
            "card",
            "started",
            "expires",
            "recurrentPaymentId",
            "active",
            "onSale",
            "amount",
            "status"
          ]
        },
        "TicketAdditionalData": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Ticket": {
          "properties": {
            "opener": {
              "$ref": "#/components/schemas/User"
            },
            "type": {
              "$ref": "#/components/schemas/TicketType"
            },
            "requestType": {
              "$ref": "#/components/schemas/TicketRequestTypeDB"
            },
            "description": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "issue": {
              "$ref": "#/components/schemas/TicketIssue"
            },
            "massage": {
              "$ref": "#/components/schemas/Service"
            },
            "userReported": {
              "$ref": "#/components/schemas/User"
            },
            "appPage": {
              "$ref": "#/components/schemas/AppPage"
            },
            "additionalData": {
              "$ref": "#/components/schemas/TicketAdditionalData"
            },
            "ticketReported": {
              "$ref": "#/components/schemas/Ticket"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "status": {
              "$ref": "#/components/schemas/TicketStatus"
            },
            "archived": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "opener",
            "type",
            "requestType",
            "code",
            "status"
          ]
        },
        "User": {
          "properties": {
            "name": {
              "pattern": " ",
              "type": "string"
            },
            "email": {
              "format": "email",
              "type": "string"
            },
            "birthdate": {
              "format": "date-time",
              "type": "string"
            },
            "cpf": {
              "type": "string"
            },
            "cep": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "roles": {
              "items": {
                "$ref": "#/components/schemas/Role"
              },
              "type": "array"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "phoneIsWhatsapp": {
              "type": "boolean"
            },
            "photo": {
              "type": "string"
            },
            "hasMissingFields": {
              "type": "boolean"
            },
            "missingFields": {
              "type": "object",
              "minProperties": 1
            },
            "gender": {
              "$ref": "#/components/schemas/Gender"
            },
            "geolocation": {
              "$ref": "#/components/schemas/Point"
            },
            "addresses": {
              "items": {
                "$ref": "#/components/schemas/Address"
              },
              "type": "array"
            },
            "messagingToken": {
              "type": "string"
            },
            "bio": {
              "type": "string"
            },
            "authIdGoogle": {
              "type": "string"
            },
            "authIdFacebook": {
              "type": "string"
            },
            "banned": {
              "type": "boolean"
            },
            "disabled": {
              "type": "boolean"
            },
            "approved": {
              "type": "boolean"
            },
            "initials": {
              "type": "string"
            },
            "profile": {
              "$ref": "#/components/schemas/UserProfile"
            },
            "distanceKm": {
              "type": "number"
            },
            "rating": {
              "$ref": "#/components/schemas/RatingStats"
            },
            "documents": {
              "items": {
                "$ref": "#/components/schemas/Document"
              },
              "type": "array"
            },
            "cards": {
              "items": {
                "$ref": "#/components/schemas/Card"
              },
              "type": "array"
            },
            "subscription": {
              "$ref": "#/components/schemas/Subscription"
            },
            "ratings": {
              "items": {
                "$ref": "#/components/schemas/Rating"
              },
              "type": "array"
            },
            "client": {
              "$ref": "#/components/schemas/Client"
            },
            "professional": {
              "$ref": "#/components/schemas/Professional"
            },
            "tickets": {
              "items": {
                "$ref": "#/components/schemas/Ticket"
              },
              "type": "array"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "name",
            "email",
            "hasMissingFields",
            "addresses",
            "banned",
            "disabled",
            "approved",
            "initials"
          ]
        },
        "Client": {
          "properties": {
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "preferenceGender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "preferenceMobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "preferenceMobilityDistance": {
              "$ref": "#/components/schemas/DistanceEnum"
            },
            "invisible": {
              "type": "boolean"
            },
            "proposal": {
              "$ref": "#/components/schemas/Proposal"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "user",
            "preferenceGender",
            "preferenceMobility"
          ]
        },
        "Proposal": {
          "properties": {
            "request": {
              "$ref": "#/components/schemas/Request"
            },
            "status": {
              "$ref": "#/components/schemas/ProposalStatus"
            },
            "messages": {
              "items": {
                "$ref": "#/components/schemas/Message"
              },
              "type": "array"
            },
            "direction": {
              "$ref": "#/components/schemas/ProposalDirection"
            },
            "myRating": {
              "$ref": "#/components/schemas/Rating"
            },
            "from": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Professional"
                },
                {
                  "$ref": "#/components/schemas/Client"
                },
                {
                  "type": "number"
                }
              ]
            },
            "to": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Professional"
                },
                {
                  "$ref": "#/components/schemas/Client"
                },
                {
                  "type": "number"
                }
              ]
            },
            "lastMessage": {
              "$ref": "#/components/schemas/Message"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "status",
            "direction"
          ]
        },
        "BaseFilter": {
          "properties": {
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            }
          },
          "type": "object"
        },
        "ApiPagination": {
          "properties": {
            "foundRows": {
              "type": "number"
            },
            "count": {
              "type": "number"
            },
            "page": {
              "type": "number"
            },
            "pages": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "foundRows",
            "count",
            "page"
          ]
        },
        "ApiResponse": {
          "properties": {
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            },
            "data": {},
            "error": {}
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "Admin": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "banned": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "username",
            "banned"
          ]
        },
        "Searchable": {
          "properties": {
            "search": {
              "type": "string"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            }
          },
          "type": "object"
        },
        "GetAllUsers": {
          "properties": {
            "documentStatus": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "roles": {
              "items": {
                "$ref": "#/components/schemas/Role"
              },
              "type": "array",
              "uniqueItems": true
            },
            "disabled": {
              "type": "boolean"
            },
            "banned": {
              "type": "boolean"
            },
            "approved": {
              "type": "boolean"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "CreateUser": {
          "properties": {
            "name": {
              "pattern": " ",
              "type": "string",
              "x-faker": {
                "custom.user.fullNameBasedOnGender": [
                  "#{gender}"
                ]
              }
            },
            "cpf": {
              "type": "string",
              "x-faker": "br.cpf"
            },
            "cep": {
              "type": "string",
              "x-faker": "address.zipCode"
            },
            "number": {
              "type": "string",
              "x-faker": "address.buildingNumber"
            },
            "adjunct": {
              "type": "string",
              "x-faker": "address.secondaryAddress"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "string",
              "x-faker": "phone.number"
            },
            "phoneIsWhatsapp": {
              "type": "boolean"
            },
            "email": {
              "format": "email",
              "type": "string",
              "x-faker": {
                "custom.user.emailBasedOnFullName": [
                  "#{name}"
                ]
              }
            },
            "gender": {
              "$ref": "#/components/schemas/Gender",
              "x-faker": "custom.user.gender"
            },
            "birthdate": {
              "format": "date-time",
              "type": "string",
              "description": "Before 2005-05-07T02:14:15.862Z",
              "oneOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "format": "date-time",
                  "type": "string"
                }
              ],
              "x-faker": "custom.user.birthDate"
            },
            "banned": {
              "type": "boolean"
            },
            "disabled": {
              "type": "boolean"
            },
            "approved": {
              "type": "boolean"
            },
            "authId": {
              "type": "string"
            },
            "photo": {
              "format": "url",
              "type": "string",
              "x-faker": "image.avatar"
            }
          },
          "type": "object",
          "required": [
            "name",
            "cpf",
            "cep",
            "password",
            "phone",
            "email",
            "gender",
            "birthdate"
          ]
        },
        "ApiResponseUserList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/User"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/User"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CompleteRegistrationFields": {
          "properties": {
            "cep": {
              "type": "boolean"
            },
            "cpf": {
              "type": "boolean"
            },
            "gender": {
              "type": "boolean"
            },
            "phone": {
              "type": "boolean"
            },
            "email": {
              "type": "boolean"
            },
            "password": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Authenticate": {
          "properties": {
            "token": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "missingFields": {
              "type": "boolean"
            },
            "fields": {
              "$ref": "#/components/schemas/CompleteRegistrationFields"
            }
          },
          "type": "object"
        },
        "ApiResponseCompleteRegistration": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Authenticate"
            },
            "error": {
              "$ref": "#/components/schemas/Authenticate"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseUser": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/User"
            },
            "error": {
              "$ref": "#/components/schemas/User"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseBoolean": {
          "properties": {
            "data": {
              "type": "boolean"
            },
            "error": {
              "type": "string"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "SaveToken": {
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "token"
          ]
        },
        "BookmarkUserResponse": {
          "properties": {
            "bookmarked": {
              "type": "boolean"
            }
          },
          "type": "object",
          "required": [
            "bookmarked"
          ]
        },
        "ApiResponseBookmarkUser": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/BookmarkUserResponse"
            },
            "error": {
              "$ref": "#/components/schemas/BookmarkUserResponse"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ProfileBookmark": {
          "properties": {
            "profile": {
              "$ref": "#/components/schemas/User"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "profile",
            "user"
          ]
        },
        "ApiResponseProfileBookmarkList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/ProfileBookmark"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/ProfileBookmark"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ProfileGuest": {
          "properties": {
            "guest": {
              "$ref": "#/components/schemas/User"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "visitedAt": {
              "format": "date-time",
              "type": "string"
            },
            "visitedDate": {
              "format": "date-time",
              "type": "string"
            },
            "times": {
              "type": "number"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "guest",
            "user",
            "visitedAt",
            "visitedDate",
            "times"
          ]
        },
        "ApiResponseProfileGuestList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/ProfileGuest"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/ProfileGuest"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "VisitsCount": {
          "properties": {
            "all": {
              "type": "number"
            },
            "twoDays": {
              "type": "number"
            },
            "oneMonth": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "all",
            "twoDays",
            "oneMonth"
          ]
        },
        "ApiResponseVisitsCount": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/VisitsCount"
            },
            "error": {
              "$ref": "#/components/schemas/VisitsCount"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ChangeType": {
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ClientProfessional"
            }
          },
          "type": "object",
          "required": [
            "type"
          ]
        },
        "EditUser": {
          "properties": {
            "name": {
              "pattern": " ",
              "type": "string"
            },
            "cpf": {
              "type": "string"
            },
            "cep": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "adjunct": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "phoneIsWhatsapp": {
              "type": "boolean"
            },
            "email": {
              "format": "email",
              "type": "string"
            },
            "gender": {
              "$ref": "#/components/schemas/Gender"
            },
            "birthdate": {
              "format": "date-time",
              "type": "string"
            },
            "banned": {
              "type": "boolean"
            },
            "disabled": {
              "type": "boolean"
            },
            "approved": {
              "type": "boolean"
            },
            "messagingToken": {
              "type": "string"
            },
            "bio": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ProfileStats": {
          "properties": {
            "allUniqueViews": {
              "type": "number"
            },
            "massagesDone": {
              "type": "number"
            },
            "requests": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "allUniqueViews"
          ]
        },
        "ApiResponseProfileStats": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfileStats"
            },
            "error": {
              "$ref": "#/components/schemas/ProfileStats"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "Login": {
          "properties": {
            "login": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "login",
            "password"
          ]
        },
        "ApiResponseAuthenticate": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Authenticate"
            },
            "error": {
              "$ref": "#/components/schemas/Authenticate"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CreateAdmin": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "banned": {
              "type": "boolean"
            }
          },
          "type": "object",
          "required": [
            "username",
            "password"
          ]
        },
        "EditAdmin": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "banned": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Statistics": {
          "properties": {
            "users": {
              "type": "number"
            },
            "professionals": {
              "type": "number"
            },
            "clients": {
              "type": "number"
            },
            "mans": {
              "type": "number"
            },
            "womans": {
              "type": "number"
            },
            "services": {
              "type": "number"
            },
            "professionalServices": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "users",
            "professionals",
            "clients",
            "mans",
            "womans",
            "services",
            "professionalServices"
          ]
        },
        "ApiResponseAdminStatistics": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Statistics"
            },
            "error": {
              "$ref": "#/components/schemas/Statistics"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProposalOrRequestList": {
          "properties": {
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Proposal"
                },
                {
                  "$ref": "#/components/schemas/Request"
                }
              ]
            },
            "error": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Proposal"
                },
                {
                  "$ref": "#/components/schemas/Request"
                }
              ]
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseAdminList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Admin"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Admin"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "GetAllAdmins": {
          "properties": {
            "banned": {
              "type": "boolean"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ApiResponseAdmin": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Admin"
            },
            "error": {
              "$ref": "#/components/schemas/Admin"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseBadge": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Badge"
            },
            "error": {
              "$ref": "#/components/schemas/Badge"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseBadgeList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Badge"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Badge"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CreateCard": {
          "properties": {
            "holder": {
              "type": "string"
            },
            "cardNumber": {
              "format": "credit-card",
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/EnumCardType"
            },
            "brand": {
              "$ref": "#/components/schemas/EnumCardBrands"
            },
            "expires": {
              "type": "string"
            },
            "cvv": {
              "minLength": 3,
              "type": "string",
              "maxLength": 4,
              "pattern": "^[-+]?[0-9]+$"
            }
          },
          "type": "object",
          "required": [
            "holder",
            "cardNumber",
            "type",
            "brand",
            "expires",
            "cvv"
          ]
        },
        "ApiResponseCard": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Card"
            },
            "error": {
              "$ref": "#/components/schemas/Card"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseCardList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Card"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Card"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseClient": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Client"
            },
            "error": {
              "$ref": "#/components/schemas/Client"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseClientList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Client"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Client"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CreateProfile": {
          "properties": {
            "gender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "mobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "mobilityDistance": {
              "type": "number"
            },
            "userId": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "gender",
            "mobility"
          ]
        },
        "SpatialDiscover": {
          "properties": {
            "geoLocation": {
              "type": "string"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "DiscoverProfessionals": {
          "properties": {
            "by": {
              "type": "string"
            },
            "massages": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            },
            "geoLocation": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "GetRandomProfessionals": {
          "properties": {
            "gender": {
              "$ref": "#/components/schemas/FilterDiscoverGender"
            },
            "local": {
              "$ref": "#/components/schemas/FilterDiscoverLocal"
            },
            "location": {
              "type": "string"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            },
            "geoLocation": {
              "type": "string"
            },
            "by": {
              "type": "string"
            },
            "massages": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "EditProfile": {
          "properties": {
            "gender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "mobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "mobilityDistance": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "GetUserSummary": {
          "properties": {
            "proposalsMade": {
              "items": {
                "$ref": "#/components/schemas/Proposal"
              },
              "type": "array"
            },
            "proposalsReceived": {
              "items": {
                "$ref": "#/components/schemas/Proposal"
              },
              "type": "array"
            },
            "chatting": {
              "items": {
                "$ref": "#/components/schemas/Proposal"
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "proposalsMade",
            "proposalsReceived",
            "chatting"
          ]
        },
        "ApiResponseGetUserSummary": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/GetUserSummary"
            },
            "error": {
              "$ref": "#/components/schemas/GetUserSummary"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "Event": {
          "properties": {
            "eventFor": {
              "$ref": "#/components/schemas/EventFor"
            },
            "type": {
              "$ref": "#/components/schemas/EventType"
            },
            "geolocation": {
              "type": "string"
            },
            "distanceKm": {
              "type": "number"
            },
            "duration": {
              "type": "number"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "startDate": {
              "format": "date-time",
              "type": "string"
            },
            "endDate": {
              "format": "date-time",
              "type": "string"
            },
            "archived": {
              "type": "boolean"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "eventFor",
            "type",
            "title",
            "archived"
          ]
        },
        "GetAllEvents": {
          "properties": {
            "type": {
              "$ref": "#/components/schemas/EventType"
            },
            "types": {
              "items": {
                "$ref": "#/components/schemas/EventType"
              },
              "type": "array",
              "uniqueItems": true
            },
            "eventFor": {
              "items": {
                "$ref": "#/components/schemas/EventFor"
              },
              "type": "array",
              "uniqueItems": true
            },
            "archived": {
              "type": "boolean"
            },
            "startDate": {
              "format": "date-time",
              "type": "string"
            },
            "endDate": {
              "format": "date-time",
              "type": "string"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ApiResponseEvent": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Event"
            },
            "error": {
              "$ref": "#/components/schemas/Event"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseEventList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Event"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Event"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "EditEvent": {
          "properties": {
            "eventFor": {
              "$ref": "#/components/schemas/EventFor"
            },
            "type": {
              "$ref": "#/components/schemas/EventType"
            },
            "geolocation": {
              "type": "string"
            },
            "duration": {
              "type": "number"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "startDate": {
              "format": "date-time",
              "type": "string"
            },
            "endDate": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "ApiResponseInvoice": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Invoice"
            },
            "error": {
              "$ref": "#/components/schemas/Invoice"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseInvoiceList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Invoice"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Invoice"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "LogBrief": {
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "format": "email",
              "type": "string"
            },
            "as": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name",
            "email",
            "as"
          ]
        },
        "Log": {
          "properties": {
            "operation": {
              "$ref": "#/components/schemas/ChangeSetType"
            },
            "entity": {
              "type": "string"
            },
            "rowId": {
              "type": "number"
            },
            "user": {
              "type": "number"
            },
            "admin": {
              "type": "number"
            },
            "brief": {
              "$ref": "#/components/schemas/LogBrief"
            },
            "system": {
              "type": "boolean"
            },
            "previousValues": {
              "type": "object"
            },
            "nextValues": {
              "type": "object"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "operation",
            "entity",
            "rowId",
            "system",
            "previousValues",
            "nextValues"
          ]
        },
        "ApiResponseLogList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Log"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Log"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseLog": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Log"
            },
            "error": {
              "$ref": "#/components/schemas/Log"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "AuthenticateSocial": {
          "properties": {
            "socialId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "authData": {}
          },
          "type": "object",
          "required": [
            "socialId",
            "type"
          ]
        },
        "ResetCodeValidated": {
          "properties": {
            "userId": {
              "type": "number"
            },
            "token": {
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "userId",
            "token"
          ]
        },
        "ApiResponseResetCodeValidated": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ResetCodeValidated"
            },
            "error": {
              "$ref": "#/components/schemas/ResetCodeValidated"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "RequestResetCode": {
          "properties": {
            "email": {
              "format": "email",
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "email"
          ]
        },
        "ResetPassword": {
          "properties": {
            "userId": {
              "type": "number"
            },
            "token": {
              "type": "string"
            },
            "newPassword": {
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "userId",
            "token",
            "newPassword"
          ]
        },
        "ValidateResetCode": {
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "type": "object",
          "required": [
            "token"
          ]
        },
        "ApiResponseMessage": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Message"
            },
            "error": {
              "$ref": "#/components/schemas/Message"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseMessageList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Message"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Message"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "GetAllUserMessages": {
          "properties": {
            "lastId": {
              "type": "number"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "SendMessage": {
          "properties": {
            "content": {
              "type": "string"
            },
            "proposalId": {
              "type": "number"
            },
            "fromId": {
              "type": "number"
            },
            "to": {
              "type": "number"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bySystem": {
              "type": "boolean"
            },
            "data": {},
            "visibleOnlyTo": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "content"
          ]
        },
        "CreatePlan": {
          "properties": {
            "amount": {
              "minLength": 2,
              "type": "string",
              "maxLength": 5
            },
            "interval": {
              "$ref": "#/components/schemas/EnumRecurrentPaymentInterval"
            },
            "title": {
              "type": "string"
            },
            "forUser": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "saleAmount": {
              "minLength": 2,
              "type": "string",
              "maxLength": 5
            },
            "enableSaleOffer": {
              "type": "boolean"
            },
            "saleExpiresAt": {
              "format": "date-time",
              "type": "string"
            },
            "temporary": {
              "type": "boolean"
            }
          },
          "type": "object",
          "required": [
            "amount",
            "interval",
            "forUser"
          ]
        },
        "EditPlan": {
          "properties": {
            "temporary": {
              "type": "boolean"
            },
            "amount": {
              "minLength": 3,
              "type": "string"
            },
            "interval": {
              "$ref": "#/components/schemas/EnumRecurrentPaymentInterval"
            },
            "title": {
              "type": "string"
            },
            "forUser": {
              "$ref": "#/components/schemas/ClientProfessional"
            },
            "enableSaleOffer": {
              "type": "boolean"
            },
            "saleAmount": {
              "minLength": 3,
              "type": "string"
            },
            "saleExpiresAt": {
              "format": "date-time",
              "type": "string"
            },
            "disabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ApiResponsePlan": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Plan"
            },
            "error": {
              "$ref": "#/components/schemas/Plan"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponsePlanList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Plan"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Plan"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProfessional": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Professional"
            },
            "error": {
              "$ref": "#/components/schemas/Professional"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProfessionalList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Professional"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Professional"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "RatingStars": {
          "properties": {
            "one": {
              "type": "number"
            },
            "two": {
              "type": "number"
            },
            "three": {
              "type": "number"
            },
            "four": {
              "type": "number"
            },
            "five": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "one",
            "two",
            "three",
            "four",
            "five"
          ]
        },
        "GenderStats": {
          "properties": {
            "man": {
              "type": "number"
            },
            "woman": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "man",
            "woman"
          ]
        },
        "PreferredStats": {
          "properties": {
            "home": {
              "type": "number"
            },
            "local": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "home",
            "local"
          ]
        },
        "DetailedRatingsStats": {
          "properties": {
            "rating": {
              "$ref": "#/components/schemas/RatingStats"
            },
            "stars": {
              "$ref": "#/components/schemas/RatingStars"
            }
          },
          "type": "object",
          "required": [
            "rating",
            "stars"
          ]
        },
        "PerformanceStats": {
          "properties": {
            "gender": {
              "$ref": "#/components/schemas/GenderStats"
            },
            "preferred": {
              "$ref": "#/components/schemas/PreferredStats"
            },
            "detailedRatings": {
              "$ref": "#/components/schemas/DetailedRatingsStats"
            }
          },
          "type": "object",
          "required": [
            "gender",
            "preferred",
            "detailedRatings"
          ]
        },
        "ApiResponsePerformanceStats": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/PerformanceStats"
            },
            "error": {
              "$ref": "#/components/schemas/PerformanceStats"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseStringList": {
          "properties": {
            "data": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "AddProfessionalService": {
          "properties": {
            "serviceId": {
              "type": "number"
            },
            "price": {
              "minLength": 2,
              "type": "string",
              "maxLength": 5
            },
            "time": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "serviceId",
            "price",
            "time"
          ]
        },
        "AddProfessionalServices": {
          "properties": {
            "professionalId": {
              "type": "number"
            },
            "services": {
              "items": {
                "$ref": "#/components/schemas/AddProfessionalService"
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "services"
          ]
        },
        "EditProfessionalService": {
          "properties": {
            "serviceId": {
              "type": "number"
            },
            "price": {
              "minLength": 2,
              "type": "string",
              "maxLength": 5
            },
            "time": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "serviceId",
            "price",
            "time"
          ]
        },
        "ApiResponseProfessionalService": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfessionalService"
            },
            "error": {
              "$ref": "#/components/schemas/ProfessionalService"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProfessionalServiceList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/ProfessionalService"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/ProfessionalService"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProposal": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Proposal"
            },
            "error": {
              "$ref": "#/components/schemas/Proposal"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseProposalList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Proposal"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Proposal"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "EditRating": {
          "properties": {
            "rating": {
              "$ref": "#/components/schemas/RatingEnum"
            },
            "ratingDetails": {
              "type": "string"
            },
            "badges": {
              "items": {
                "$ref": "#/components/schemas/Badge"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "GetAllRatings": {
          "properties": {
            "reviewed": {
              "type": "boolean"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ApiResponseRatingList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Rating"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Rating"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseRatingStats": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/RatingStats"
            },
            "error": {
              "$ref": "#/components/schemas/RatingStats"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "Rate": {
          "properties": {
            "proposalId": {
              "type": "number"
            },
            "messageId": {
              "type": "number"
            },
            "rating": {
              "$ref": "#/components/schemas/RatingEnum"
            },
            "ratingDetails": {
              "type": "string"
            },
            "badges": {
              "items": {
                "type": "number"
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "proposalId",
            "messageId",
            "rating"
          ]
        },
        "ApiResponseRating": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Rating"
            },
            "error": {
              "$ref": "#/components/schemas/Rating"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CreateRequest": {
          "properties": {
            "gender": {
              "$ref": "#/components/schemas/GenderPreference"
            },
            "mobility": {
              "$ref": "#/components/schemas/Mobility"
            },
            "mobilityDistance": {
              "$ref": "#/components/schemas/DistanceEnum"
            },
            "status": {
              "$ref": "#/components/schemas/RequestStatus"
            },
            "massageIds": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "gender",
            "mobility",
            "massageIds"
          ]
        },
        "ApiResponseRequest": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Request"
            },
            "error": {
              "$ref": "#/components/schemas/Request"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseRequestList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Request"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Request"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseResponseList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Response"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Response"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseService": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Service"
            },
            "error": {
              "$ref": "#/components/schemas/Service"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseServiceList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Service"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Service"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "CreateService": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "briefDescription": {
              "type": "string"
            },
            "timeMin": {
              "type": "number",
              "maximum": 120,
              "minimum": 10
            },
            "timeMax": {
              "type": "number",
              "maximum": 120,
              "minimum": 10
            },
            "priceMin": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "priceMax": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "contraindications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "indications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "required": [
            "name",
            "description",
            "briefDescription",
            "timeMin",
            "timeMax",
            "priceMin",
            "priceMax",
            "contraindications",
            "indications"
          ]
        },
        "EditService": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "briefDescription": {
              "type": "string"
            },
            "timeMin": {
              "type": "number",
              "maximum": 999,
              "minimum": 0
            },
            "timeMax": {
              "type": "number",
              "maximum": 999,
              "minimum": 0
            },
            "priceMin": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "priceMax": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "contraindications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "indications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "archived": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ApiResponseSubscription": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Subscription"
            },
            "error": {
              "$ref": "#/components/schemas/Subscription"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseSubscriptionList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Subscription"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Subscription"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ChangeSubscriptionPlan": {
          "properties": {
            "planId": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "planId"
          ]
        },
        "ChangeSubscriptionCard": {
          "properties": {
            "cardId": {
              "type": "number"
            },
            "cvv": {
              "minimum": 3,
              "type": "number",
              "maximum": 4
            }
          },
          "type": "object",
          "required": [
            "cardId"
          ]
        },
        "Subscribe": {
          "properties": {
            "planId": {
              "type": "number"
            },
            "cardId": {
              "type": "number"
            },
            "cvv": {
              "minLength": 3,
              "type": "string",
              "maxLength": 4,
              "pattern": "^[-+]?[0-9]+$"
            }
          },
          "type": "object",
          "required": [
            "planId",
            "cardId"
          ]
        },
        "ApiResponseTicket": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Ticket"
            },
            "error": {
              "$ref": "#/components/schemas/Ticket"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseTicketList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Ticket"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/Ticket"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "EditTicket": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "status": {
              "$ref": "#/components/schemas/TicketStatus"
            }
          },
          "type": "object"
        },
        "CreateTicketData": {
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TicketType"
            },
            "requestType": {
              "$ref": "#/components/schemas/TicketRequestTypeDB"
            },
            "description": {
              "type": "string"
            },
            "issue": {
              "$ref": "#/components/schemas/TicketIssue"
            },
            "massageId": {
              "type": "number"
            },
            "userReportedId": {
              "type": "number"
            },
            "appPage": {
              "$ref": "#/components/schemas/AppPage"
            },
            "additionalData": {
              "$ref": "#/components/schemas/TicketAdditionalData"
            },
            "ticketReportedId": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "type",
            "requestType"
          ]
        },
        "GetAllTickets": {
          "properties": {
            "status": {
              "items": {
                "$ref": "#/components/schemas/TicketStatus"
              },
              "type": "array"
            },
            "archived": {
              "$ref": "#/components/schemas/TicketArchivedFilter"
            },
            "limit": {
              "type": "number",
              "description": "Items per page"
            },
            "page": {
              "type": "number",
              "description": "Page"
            },
            "search": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "TicketMessage": {
          "properties": {
            "ticket": {
              "$ref": "#/components/schemas/Ticket"
            },
            "admin": {
              "$ref": "#/components/schemas/Admin"
            },
            "id": {
              "type": "number",
              "readOnly": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "content": {
              "type": "string"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bySystem": {
              "type": "boolean"
            },
            "data": {},
            "visibleOnlyTo": {
              "type": "number"
            },
            "me": {
              "type": "boolean"
            }
          },
          "type": "object",
          "required": [
            "ticket",
            "content",
            "bySystem",
            "me"
          ]
        },
        "ApiResponseTicketMessageList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/TicketMessage"
              },
              "type": "array"
            },
            "error": {
              "items": {
                "$ref": "#/components/schemas/TicketMessage"
              },
              "type": "array"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "ApiResponseTicketMessage": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TicketMessage"
            },
            "error": {
              "$ref": "#/components/schemas/TicketMessage"
            },
            "status": {
              "type": "number"
            },
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/components/schemas/ApiPagination"
            }
          },
          "type": "object",
          "required": [
            "status",
            "success",
            "message"
          ]
        },
        "SendMessageBase": {
          "properties": {
            "content": {
              "type": "string"
            },
            "attachments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bySystem": {
              "type": "boolean"
            },
            "data": {},
            "visibleOnlyTo": {
              "type": "number"
            }
          },
          "type": "object",
          "required": [
            "content"
          ]
        },
        "ClientProfessional": {
          "type": "string",
          "enum": [
            "client",
            "professional"
          ],
          "x-enum-varnames": [
            "CLIENT",
            "PROFESSIONAL"
          ]
        },
        "GenderPreference": {
          "type": "string",
          "enum": [
            "MAN",
            "WOMAN",
            "BOTH"
          ],
          "x-enum-varnames": [
            "MAN",
            "WOMAN",
            "BOTH"
          ]
        },
        "Mobility": {
          "type": "string",
          "enum": [
            "CLIENT_TO_PROFESSIONAL",
            "PROFESSIONAL_TO_CLIENT",
            "BOTH"
          ],
          "x-enum-varnames": [
            "CLIENT_TO_PROFESSIONAL",
            "PROFESSIONAL_TO_CLIENT",
            "BOTH"
          ]
        },
        "DistanceEnum": {
          "type": "string",
          "enum": [
            5,
            15,
            30,
            50
          ],
          "x-enum-varnames": [
            "FIVE_KM",
            "FIFTEEN_KM",
            "THIRTY_KM",
            "FIFTY_KM"
          ]
        },
        "RequestStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "BLOCK_FOR_NEW_RESPONSES",
            "CONFIRMED",
            "CANCELLED"
          ],
          "x-enum-varnames": [
            "PENDING",
            "BLOCKED_FOR_NEW_RESPONSES",
            "CONFIRMED",
            "CANCELLED"
          ]
        },
        "ResponseStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CHATTING",
            "CONFIRMED",
            "REJECTED",
            "DONE"
          ],
          "x-enum-varnames": [
            "PENDING",
            "CHATTING",
            "CONFIRMED",
            "REJECTED",
            "DONE"
          ]
        },
        "RatingEnum": {
          "type": "string",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "x-enum-varnames": [
            "ONE",
            "TWO",
            "THREE",
            "FOUR",
            "FIVE"
          ]
        },
        "DocumentType": {
          "type": "string",
          "enum": [
            "identity",
            "certificate"
          ],
          "x-enum-varnames": [
            "IDENTITY",
            "CERTIFICATE"
          ]
        },
        "DocumentStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONFIRMED",
            "REJECTED"
          ],
          "x-enum-varnames": [
            "PENDING",
            "CONFIRMED",
            "REJECTED"
          ]
        },
        "EnumCardType": {
          "type": "string",
          "enum": [
            "CreditCard",
            "DebitCard"
          ],
          "x-enum-varnames": [
            "CREDIT",
            "DEBIT"
          ]
        },
        "EnumCardBrands": {
          "type": "string",
          "enum": [
            "VISA",
            "MASTER",
            "AMEX",
            "ELO",
            "AURA",
            "JCB",
            "DINERS",
            "DISCOVERY",
            "DISCOVER",
            "HIPERCARD"
          ],
          "x-enum-varnames": [
            "VISA",
            "MASTER",
            "AMEX",
            "ELO",
            "AURA",
            "JCB",
            "DINERS",
            "DISCOVERY",
            "DISCOVER",
            "HIPERCARD"
          ]
        },
        "TransactionStatus": {
          "type": "string",
          "enum": [
            0,
            1,
            2,
            3,
            10,
            11,
            12,
            13,
            20
          ],
          "x-enum-varnames": [
            "NOT_FINISHED",
            "AUTHORIZED",
            "PAYMENT_CONFIRMED",
            "DENIED",
            "VOIDED",
            "REFUNDED",
            "PENDING",
            "ABORTED",
            "SCHEDULED"
          ]
        },
        "EnumRecurrentPaymentInterval": {
          "type": "string",
          "enum": [
            "MONTHLY",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUAL",
            "ANNUAL"
          ],
          "x-enum-varnames": [
            "MONTHLY",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUAL",
            "ANNUAL"
          ]
        },
        "RecurrencyStatus": {
          "type": "string",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "x-enum-varnames": [
            "ACTIVE",
            "FINISHED",
            "DEACTIVATED_VENDOR",
            "DEACTIVATED_RETRY_EXCEEDED",
            "DEACTIVATED_CARD_EXPIRED"
          ]
        },
        "TicketType": {
          "type": "string",
          "enum": [
            "edit-massage",
            "report",
            "bug",
            "other"
          ],
          "x-enum-varnames": [
            "EDIT_MASSAGE",
            "REPORT",
            "BUG",
            "OTHER"
          ]
        },
        "TicketRequestTypeDB": {
          "type": "string",
          "enum": [
            "add",
            "edit",
            "join",
            "disable",
            "client",
            "professional",
            "our-support",
            "report",
            "commercial",
            "financial",
            "rh",
            "other"
          ],
          "x-enum-varnames": [
            "ADD",
            "EDIT",
            "JOIN",
            "DISABLE",
            "CLIENT",
            "PROFESSIONAL",
            "OUR_SUPPORT",
            "REPORT",
            "COMMERCIAL",
            "FINANCIAL",
            "RH",
            "OTHER"
          ]
        },
        "TicketIssue": {
          "type": "string",
          "enum": [
            "bad-behavior",
            "insecurity",
            "other"
          ],
          "x-enum-varnames": [
            "BAD_BEHAVIOR",
            "INSECURITY",
            "OTHER"
          ]
        },
        "AppPage": {
          "type": "string",
          "enum": [
            "bookmarks",
            "chat",
            "client_or_professional",
            "create_ticket_another",
            "create_ticket_bug",
            "create_ticket_massage",
            "create_ticket_report",
            "discover_client",
            "discover_professional",
            "events",
            "forgot_password",
            "free_plan",
            "login",
            "massage_information",
            "messages",
            "performance",
            "profile_client",
            "profile_professional",
            "profile_guests",
            "register",
            "register_client",
            "register_professional",
            "register_photos",
            "register_services",
            "search",
            "security_wall",
            "support"
          ],
          "x-enum-varnames": [
            "BOOKMARKS",
            "CHAT",
            "CLIENT_OR_PROFESSIONAL",
            "CREATE_TICKET_ANOTHER",
            "CREATE_TICKET_BUG",
            "CREATE_TICKET_MASSAGE",
            "CREATE_TICKET_REPORT",
            "DISCOVER_CLIENT",
            "DISCOVER_PROFESSIONAL",
            "EVENTS",
            "FORGOT_PASSWORD",
            "FREE_PLAN",
            "LOGIN",
            "MASSAGE_INFORMATION",
            "MESSAGES",
            "PERFORMANCE",
            "PROFILE_CLIENT",
            "PROFILE_PROFESSIONAL",
            "PROFILE_GUESTS",
            "REGISTER",
            "REGISTER_CLIENT",
            "REGISTER_PROFESSIONAL",
            "REGISTER_PHOTOS",
            "REGISTER_SERVICES",
            "SEARCH",
            "SECURITY_WALL",
            "SUPPORT"
          ]
        },
        "TicketStatus": {
          "type": "string",
          "enum": [
            "open",
            "waiting_user_response",
            "waiting_support_response",
            "closed"
          ],
          "x-enum-varnames": [
            "OPEN",
            "WAITING_USER_RESPONSE",
            "WAITING_SUPPORT_RESPONSE",
            "CLOSED"
          ]
        },
        "Role": {
          "type": "string",
          "enum": [
            "user",
            "client",
            "professional",
            "admin"
          ],
          "x-enum-varnames": [
            "USER",
            "CLIENT",
            "PROFESSIONAL",
            "ADMIN"
          ]
        },
        "Gender": {
          "type": "string",
          "enum": [
            "MAN",
            "WOMAN"
          ],
          "x-enum-varnames": [
            "MAN",
            "WOMAN"
          ]
        },
        "ProposalStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "REJECTED",
            "CHATTING",
            "CONFIRMED",
            "DONE"
          ],
          "x-enum-varnames": [
            "PENDING",
            "REJECTED",
            "CHATTING",
            "CONFIRMED",
            "DONE"
          ]
        },
        "ProposalDirection": {
          "type": "string",
          "enum": [
            "CLIENT_TO_PROFESSIONAL",
            "PROFESSIONAL_TO_CLIENT"
          ],
          "x-enum-varnames": [
            "CLIENT_TO_PROFESSIONAL",
            "PROFESSIONAL_TO_CLIENT"
          ]
        },
        "FilterDiscoverGender": {
          "type": "string",
          "enum": [
            "man",
            "woman",
            "both"
          ],
          "x-enum-varnames": [
            "MAN",
            "WOMAN",
            "BOTH"
          ]
        },
        "FilterDiscoverLocal": {
          "type": "string",
          "enum": [
            "local",
            "home",
            "both"
          ],
          "x-enum-varnames": [
            "LOCAL",
            "HOME",
            "BOTH"
          ]
        },
        "EventFor": {
          "type": "string",
          "enum": [
            "client",
            "professional",
            "BOTH"
          ],
          "x-enum-varnames": [
            "CLIENT",
            "PROFESSIONAL",
            "BOTH"
          ]
        },
        "EventType": {
          "type": "string",
          "enum": [
            "EVENT",
            "NEWS",
            "PROMOTION"
          ],
          "x-enum-varnames": [
            "EVENT",
            "NEWS",
            "PROMOTION"
          ]
        },
        "ChangeSetType": {
          "type": "string",
          "enum": [
            "create",
            "update",
            "delete",
            "update_early",
            "delete_early"
          ],
          "x-enum-varnames": [
            "CREATE",
            "UPDATE",
            "DELETE",
            "UPDATE_EARLY",
            "DELETE_EARLY"
          ]
        },
        "TicketArchivedFilter": {
          "type": "string",
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-varnames": [
            "NO",
            "YES",
            "ALL"
          ]
        }
      },
      "securitySchemes": {
        "userToken": {
          "type": "http",
          "scheme": "basic"
        },
        "adminToken": {
          "type": "http",
          "scheme": "basic"
        }
      }
    },
    "info": {
      "title": "Super Massagem API",
      "version": "1.0.0",
      "description": "API do Super Massagem",
      "contact": {
        "name": "TRIAL",
        "email": "dev@trialent.com",
        "url": "https://trialent.com"
      },
      "license": {
        "name": "MIT"
      }
    },
    "openapi": "3.0.0",
    "paths": {
      "/user": {
        "get": {
          "operationId": "UserController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "documentStatus",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "type",
              "schema": {
                "$ref": "#/components/schemas/ClientProfessional"
              }
            },
            {
              "in": "query",
              "name": "roles",
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Role"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            {
              "in": "query",
              "name": "disabled",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "banned",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "approved",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all users",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "post": {
          "operationId": "UserController.create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser"
                }
              }
            },
            "description": "CreateUser",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUser"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new user",
          "tags": [
            "Sign up"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me": {
        "get": {
          "operationId": "UserController.getMe",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUser"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get current user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "UserController.updateMe",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUser"
                }
              }
            },
            "description": "EditUser",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update me",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/{userId}/stats": {
        "get": {
          "operationId": "UserController.getProfileStats",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfileStats"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get user stats",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/{userId}/documents/reject": {
        "post": {
          "operationId": "UserController.rejectDocument",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Reject documents",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/documents/confirm": {
        "post": {
          "operationId": "UserController.confirmDocument",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Approve documents",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/change-type": {
        "post": {
          "operationId": "UserController.changeType",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeType"
                }
              }
            },
            "description": "ChangeType",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Reject document",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/me/documents/{type}": {
        "post": {
          "operationId": "UserController.sendDocument",
          "parameters": [
            {
              "in": "path",
              "name": "type",
              "required": true,
              "schema": {}
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Send document",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "photos": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "photos": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/user/me/messaging-token": {
        "post": {
          "operationId": "UserController.saveMessagingToken",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveToken"
                }
              }
            },
            "description": "SaveToken",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Send FCM messaging token",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/{profileId}/bookmark": {
        "post": {
          "operationId": "UserController.toggleBookmarkProfile",
          "parameters": [
            {
              "in": "path",
              "name": "profileId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBookmarkUser"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Bookmark user",
          "tags": [
            "Bookmark"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/register-visit/{userId}": {
        "post": {
          "operationId": "UserController.registerVisit",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register user visit",
          "tags": [
            "Guest"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/complete-social-registration": {
        "put": {
          "operationId": "UserController.completeSocialRegistration",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUser"
                }
              }
            },
            "description": "EditUser",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseCompleteRegistration"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update user",
          "tags": [
            "Sign up"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}": {
        "put": {
          "operationId": "UserController.update",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUser"
                }
              }
            },
            "description": "EditUser",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "get": {
          "operationId": "UserController.get",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUser"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get user by id",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/{userId}/unban": {
        "put": {
          "operationId": "UserController.unban",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Unban user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/ban": {
        "put": {
          "operationId": "UserController.ban",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Ban user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/enable": {
        "put": {
          "operationId": "UserController.enable",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Enable user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/disable": {
        "put": {
          "operationId": "UserController.disable",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Disable user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/approve": {
        "put": {
          "operationId": "UserController.approve",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Approve user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/{userId}/disapprove": {
        "put": {
          "operationId": "UserController.disapprove",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Disapprove user",
          "tags": [
            "User"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/user/me/guests/count": {
        "get": {
          "operationId": "UserController.countGuests",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseVisitsCount"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Count all guests",
          "tags": [
            "Guest"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/guests/recent": {
        "get": {
          "operationId": "UserController.getRecentGuests",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfileGuestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all recent guests",
          "tags": [
            "Guest"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/guests/month": {
        "get": {
          "operationId": "UserController.getMonthGuests",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfileGuestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all guests of this month",
          "tags": [
            "Guest"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/guests/all": {
        "get": {
          "operationId": "UserController.getAllGuests",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfileGuestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all guests",
          "tags": [
            "Guest"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/bookmarks": {
        "get": {
          "operationId": "UserController.getBookmarks",
          "parameters": [
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfileBookmarkList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all bookmarks",
          "tags": [
            "Bookmark"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/interacted-with-me": {
        "get": {
          "operationId": "UserController.getAllUsersThatInteractedWithMe",
          "parameters": [
            {
              "in": "query",
              "name": "documentStatus",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "type",
              "schema": {
                "$ref": "#/components/schemas/ClientProfessional"
              }
            },
            {
              "in": "query",
              "name": "roles",
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Role"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            {
              "in": "query",
              "name": "disabled",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "banned",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "approved",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all interacted with me",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/profile-photo": {
        "post": {
          "operationId": "UserController.saveProfilePhoto",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Save user profile photo",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "photo": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "photo": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "UserController.deleteProfilePhoto",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Delete user profile photo",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/geolocation": {
        "put": {
          "operationId": "UserController.updateMyGeolocation",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Point"
                }
              }
            },
            "description": "Point",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update my geolocation",
          "tags": [
            "User"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/admin": {
        "get": {
          "operationId": "AdminController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "banned",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAdminList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all admins",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "post": {
          "operationId": "AdminController.register",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAdmin"
                }
              }
            },
            "description": "CreateAdmin",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register admin",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/proposals-and-requests": {
        "get": {
          "operationId": "AdminController.getAllProposalsAndRequestsTimeline",
          "parameters": [
            {
              "in": "query",
              "name": "banned",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProposalOrRequestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all proposals and requests timeline",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/statistics": {
        "get": {
          "operationId": "AdminController.getStatistics",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAdminStatistics"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get general statistics",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/{adminId}": {
        "get": {
          "operationId": "AdminController.get",
          "parameters": [
            {
              "in": "path",
              "name": "adminId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAdmin"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get admin by id",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "put": {
          "operationId": "AdminController.update",
          "parameters": [
            {
              "in": "path",
              "name": "adminId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditAdmin"
                }
              }
            },
            "description": "EditAdmin",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update admin",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "delete": {
          "operationId": "AdminController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "adminId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove admin",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/authenticate": {
        "post": {
          "operationId": "AdminController.authenticate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            },
            "description": "Login",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAuthenticate"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Authenticate admin",
          "tags": [
            "Admin"
          ]
        }
      },
      "/admin/me": {
        "put": {
          "operationId": "AdminController.updateMe",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditAdmin"
                }
              }
            },
            "description": "EditAdmin",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update me",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/{adminId}/unban": {
        "put": {
          "operationId": "AdminController.unban",
          "parameters": [
            {
              "in": "path",
              "name": "adminId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Unban admin",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/{adminId}/ban": {
        "put": {
          "operationId": "AdminController.ban",
          "parameters": [
            {
              "in": "path",
              "name": "adminId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Ban admin",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/admin/refresh-token": {
        "post": {
          "operationId": "AdminController.refreshToken",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAuthenticate"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get new access token",
          "tags": [
            "Admin"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/badge/all": {
        "get": {
          "operationId": "BadgeController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBadgeList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all badges",
          "tags": [
            "Badge"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/badge/{badgeId}": {
        "get": {
          "operationId": "BadgeController.get",
          "parameters": [
            {
              "in": "path",
              "name": "badgeId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBadge"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get badge by id",
          "tags": [
            "Badge"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "BadgeController.update",
          "parameters": [
            {
              "in": "path",
              "name": "badgeId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Badge"
                }
              }
            },
            "description": "Badge",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update badge",
          "tags": [
            "Badge"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "delete": {
          "operationId": "BadgeController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "badgeId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove badge",
          "tags": [
            "Badge"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/badge": {
        "post": {
          "operationId": "BadgeController.create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Badge"
                }
              }
            },
            "description": "Badge",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new badge",
          "tags": [
            "Badge"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/cards/me": {
        "get": {
          "operationId": "CardController.getMyCards",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseCardList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get my cards",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/cards/all": {
        "get": {
          "operationId": "CardController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseCardList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all cards",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/cards/{cardId}": {
        "get": {
          "operationId": "CardController.get",
          "parameters": [
            {
              "in": "path",
              "name": "cardId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseCard"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get card by id",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "CardController.update",
          "parameters": [
            {
              "in": "path",
              "name": "cardId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            },
            "description": "Card",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update card",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "delete": {
          "operationId": "CardController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "cardId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove card",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/user/me/cards": {
        "post": {
          "operationId": "CardController.create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCard"
                }
              }
            },
            "description": "CreateCard",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseCard"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new card",
          "tags": [
            "Card"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/all": {
        "get": {
          "operationId": "ClientController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseClientList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all clients",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/random-professionals": {
        "get": {
          "operationId": "ClientController.getRandomProfessionals",
          "parameters": [
            {
              "in": "query",
              "name": "gender",
              "schema": {
                "$ref": "#/components/schemas/FilterDiscoverGender"
              }
            },
            {
              "in": "query",
              "name": "local",
              "schema": {
                "$ref": "#/components/schemas/FilterDiscoverLocal"
              }
            },
            {
              "in": "query",
              "name": "location",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "geoLocation",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "by",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "massages",
              "schema": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get random professionals",
          "tags": [
            "Discover"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/most-requested-professionals": {
        "get": {
          "operationId": "ClientController.getMostRequestedProfessionals",
          "parameters": [
            {
              "in": "query",
              "name": "by",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "massages",
              "schema": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "geoLocation",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get most requested professionals",
          "tags": [
            "Discover"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/compatible-professionals": {
        "get": {
          "operationId": "ClientController.getCompatibleProfessionals",
          "parameters": [
            {
              "in": "query",
              "name": "by",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "massages",
              "schema": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "geoLocation",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get compatible professionals",
          "tags": [
            "Discover"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/me": {
        "put": {
          "operationId": "ClientController.update",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfile"
                }
              }
            },
            "description": "EditProfile",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update client",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/{clientId}": {
        "get": {
          "operationId": "ClientController.get",
          "parameters": [
            {
              "in": "path",
              "name": "clientId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseClient"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get client by id",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/clientinvisible-mode/enable": {
        "post": {
          "operationId": "ClientController.enableInvisibleMode",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Enable invisible mode",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/clientinvisible-mode/disable": {
        "post": {
          "operationId": "ClientController.disableInvisibleMode",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Disable invisible mode",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client": {
        "post": {
          "operationId": "ClientController.register",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProfile"
                }
              }
            },
            "description": "CreateProfile",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new client",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/client/me/main": {
        "get": {
          "operationId": "ClientController.getMain",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseGetUserSummary"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get summary",
          "tags": [
            "Client"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/event/all": {
        "get": {
          "operationId": "EventController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "type",
              "schema": {
                "$ref": "#/components/schemas/EventType"
              }
            },
            {
              "in": "query",
              "name": "types",
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/EventType"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            {
              "in": "query",
              "name": "eventFor",
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/EventFor"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            {
              "in": "query",
              "name": "archived",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "startDate",
              "schema": {
                "format": "date-time",
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "endDate",
              "schema": {
                "format": "date-time",
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseEventList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all events without discrimination",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/event/all/events": {
        "get": {
          "operationId": "EventController.getAllEvents",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseEventList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all events",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/event/all/news": {
        "get": {
          "operationId": "EventController.getAllNews",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseEventList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all news",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/event/all/promotions": {
        "get": {
          "operationId": "EventController.getAllPromotions",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseEventList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all promotions",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/event/{eventId}": {
        "get": {
          "operationId": "EventController.get",
          "parameters": [
            {
              "in": "path",
              "name": "eventId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseEvent"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get event by id",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "EventController.update",
          "parameters": [
            {
              "in": "path",
              "name": "eventId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update event",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "$ref": "#/components/schemas/EditEvent"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "images": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "EventController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "eventId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove event",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/event": {
        "post": {
          "operationId": "EventController.create",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new event",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "images": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/event/photos": {
        "post": {
          "operationId": "EventController.savePhotos",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Save event photos",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/event/{eventId}/archive": {
        "put": {
          "operationId": "EventController.archive",
          "parameters": [
            {
              "in": "path",
              "name": "eventId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Archive event",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/event/{eventId}/unarchive": {
        "put": {
          "operationId": "EventController.unarchive",
          "parameters": [
            {
              "in": "path",
              "name": "eventId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Unarchive event",
          "tags": [
            "Event"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/invoice/all": {
        "get": {
          "operationId": "InvoiceController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseInvoiceList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all invoices",
          "tags": [
            "Invoice"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/invoice/{invoiceId}": {
        "get": {
          "operationId": "InvoiceController.get",
          "parameters": [
            {
              "in": "path",
              "name": "invoiceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseInvoice"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get invoice by id",
          "tags": [
            "Invoice"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/log/all": {
        "get": {
          "operationId": "LogController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseLogList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all logs",
          "tags": [
            "Log"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/log/{logId}": {
        "get": {
          "operationId": "LogController.get",
          "parameters": [
            {
              "in": "path",
              "name": "logId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseLog"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get log by id",
          "tags": [
            "Log"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/authenticate": {
        "post": {
          "operationId": "LoginController.authenticate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            },
            "description": "Login",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAuthenticate"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Authenticate user",
          "tags": [
            "Login"
          ]
        }
      },
      "/authenticate-social": {
        "post": {
          "operationId": "LoginController.authenticateSocial",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateSocial"
                }
              }
            },
            "description": "AuthenticateSocial",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAuthenticate"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Authenticate with social account",
          "tags": [
            "Login"
          ]
        }
      },
      "/refresh-token": {
        "post": {
          "operationId": "LoginController.refreshToken",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseAuthenticate"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get new access token",
          "tags": [
            "Login"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/reset-password/request": {
        "post": {
          "operationId": "LoginController.requestResetCode",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResetCode"
                }
              }
            },
            "description": "RequestResetCode",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Request to reset password",
          "tags": [
            "Login"
          ]
        }
      },
      "/reset-password/validate": {
        "post": {
          "operationId": "LoginController.validateResetCode",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResetCode"
                }
              }
            },
            "description": "ValidateResetCode",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseResetCodeValidated"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Validate reset password code",
          "tags": [
            "Login"
          ]
        }
      },
      "/reset-password": {
        "put": {
          "operationId": "LoginController.resetPassword",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPassword"
                }
              }
            },
            "description": "ResetPassword",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Reset password",
          "tags": [
            "Login"
          ]
        }
      },
      "/is-available/{data}": {
        "post": {
          "operationId": "LoginController.isAvailable",
          "parameters": [
            {
              "in": "path",
              "name": "data",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "string"
              },
              "examples": {
                "cpfString": {
                  "value": "cpf:999.999.999-99"
                },
                "cpfNumber": {
                  "value": "cpf:99999999999"
                },
                "phone": {
                  "value": "phone:99999999999"
                },
                "email": {
                  "value": "email:email@example.com"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Verify data availability",
          "tags": [
            "Login"
          ]
        }
      },
      "/message/with-user/{userId}": {
        "get": {
          "operationId": "MessageController.getUserMessages",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "lastId",
              "schema": {
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseMessageList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get user messages",
          "tags": [
            "Message"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/message/{messageId}": {
        "get": {
          "operationId": "MessageController.get",
          "parameters": [
            {
              "in": "path",
              "name": "messageId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseMessage"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get message by id",
          "tags": [
            "Message"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/message/send/{userId}": {
        "post": {
          "operationId": "MessageController.send",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseMessage"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Send new message",
          "tags": [
            "Message"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sendMessage": {
                      "$ref": "#/components/schemas/SendMessage"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "attachments": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/payment/notify": {
        "post": {
          "operationId": "PaymentController.notify",
          "responses": {
            "200": {
              "content": {
                "application/json": {}
              },
              "description": "Successful response"
            }
          },
          "summary": "Reserved",
          "tags": [
            "Payment"
          ]
        }
      },
      "/plan/all": {
        "get": {
          "operationId": "PlanController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponsePlanList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all plans",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/plan/{planId}": {
        "get": {
          "operationId": "PlanController.get",
          "parameters": [
            {
              "in": "path",
              "name": "planId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponsePlan"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get plan by id",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "PlanController.update",
          "parameters": [
            {
              "in": "path",
              "name": "planId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditPlan"
                }
              }
            },
            "description": "EditPlan",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update plan",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "delete": {
          "operationId": "PlanController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "planId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove plan",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/plan": {
        "post": {
          "operationId": "PlanController.create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlan"
                }
              }
            },
            "description": "CreatePlan",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new plan",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/plan/{planId}/enable": {
        "put": {
          "operationId": "PlanController.enable",
          "parameters": [
            {
              "in": "path",
              "name": "planId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Enable plan for new subscriptions",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/plan/{planId}/disable": {
        "put": {
          "operationId": "PlanController.disable",
          "parameters": [
            {
              "in": "path",
              "name": "planId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Disable plan for new subscriptions",
          "tags": [
            "Plan"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/professional/all": {
        "get": {
          "operationId": "ProfessionalController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfessionalList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all professionals",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/me/complete-register": {
        "put": {
          "operationId": "ProfessionalController.completeRegister",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Complete professional register",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/me": {
        "put": {
          "operationId": "ProfessionalController.update",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfile"
                }
              }
            },
            "description": "EditProfile",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update professional",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/random-clients": {
        "get": {
          "operationId": "ProfessionalController.getRandomClients",
          "parameters": [
            {
              "in": "query",
              "name": "geoLocation",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get random clients",
          "tags": [
            "Discover"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/compatible-clients": {
        "get": {
          "operationId": "ProfessionalController.getCompatibleClients",
          "parameters": [
            {
              "in": "query",
              "name": "geoLocation",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseUserList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get compatible clients",
          "tags": [
            "Discover"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/me/main": {
        "get": {
          "operationId": "ProfessionalController.getMain",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseGetUserSummary"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get summary",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/me/performance": {
        "get": {
          "operationId": "ProfessionalController.getPerformanceStats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponsePerformanceStats"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get performance stats",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/{professionalId}": {
        "get": {
          "operationId": "ProfessionalController.get",
          "parameters": [
            {
              "in": "path",
              "name": "professionalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfessional"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get professional by id",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional": {
        "post": {
          "operationId": "ProfessionalController.register",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProfile"
                }
              }
            },
            "description": "CreateProfile",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new professional",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional/me/photos": {
        "post": {
          "operationId": "ProfessionalController.saveLocalPhotos",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseStringList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Save local photos",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "photos": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "photos": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/professional/me/photo/{photoId}": {
        "delete": {
          "operationId": "ProfessionalController.deleteLocalPhoto",
          "parameters": [
            {
              "in": "path",
              "name": "photoId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Delete local photo",
          "tags": [
            "Professional"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional-service/me": {
        "get": {
          "operationId": "ProfessionalServiceController.getMe",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfessionalServiceList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all from professional",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional-service/{professionalMassageServiceId}": {
        "get": {
          "operationId": "ProfessionalServiceController.get",
          "parameters": [
            {
              "in": "path",
              "name": "professionalMassageServiceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfessionalService"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get professional service by id",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "ProfessionalServiceController.update",
          "parameters": [
            {
              "in": "path",
              "name": "professionalMassageServiceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfessionalService"
                }
              }
            },
            "description": "EditProfessionalService",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update professional service",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "delete": {
          "operationId": "ProfessionalServiceController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "professionalMassageServiceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove service from professional",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional-service/from/{professionalId}": {
        "get": {
          "operationId": "ProfessionalServiceController.getAll",
          "parameters": [
            {
              "in": "path",
              "name": "professionalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProfessionalServiceList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all services offered by professional",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/professional-service": {
        "post": {
          "operationId": "ProfessionalServiceController.add",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProfessionalServices"
                }
              }
            },
            "description": "AddProfessionalServices",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Add services on professional",
          "tags": [
            "Professional Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/proposal/professional/{professionalId}": {
        "get": {
          "operationId": "ProposalController.getAllByProfessional",
          "parameters": [
            {
              "in": "path",
              "name": "professionalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProposalList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all proposals",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/proposal/{id}": {
        "get": {
          "operationId": "ProposalController.get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseProposal"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get proposal by id",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "post": {
          "operationId": "ProposalController.makeProposal",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new proposal",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "ProposalController.update",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposal"
                }
              }
            },
            "description": "Proposal",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update proposal",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/proposal/{proposalId}/chat": {
        "post": {
          "operationId": "ProposalController.chat",
          "parameters": [
            {
              "in": "path",
              "name": "proposalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Chat",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/proposal/{proposalId}/accept": {
        "post": {
          "operationId": "ProposalController.accept",
          "parameters": [
            {
              "in": "path",
              "name": "proposalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Accept proposal",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/proposal/{proposalId}/reject": {
        "post": {
          "operationId": "ProposalController.reject",
          "parameters": [
            {
              "in": "path",
              "name": "proposalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Reject proposal",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/proposal/{proposalId}/finish": {
        "post": {
          "operationId": "ProposalController.finish",
          "parameters": [
            {
              "in": "path",
              "name": "proposalId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Finish proposal",
          "tags": [
            "Proposal"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/rating/all": {
        "get": {
          "operationId": "RatingController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "reviewed",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRatingList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all ratings",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/rating/on/{userId}": {
        "get": {
          "operationId": "RatingController.getOn",
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRatingStats"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get ratings on user",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/rating/me": {
        "get": {
          "operationId": "RatingController.getMe",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRatingStats"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get my ratings stats",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/rating": {
        "post": {
          "operationId": "RatingController.rate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rate"
                }
              }
            },
            "description": "Rate",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRating"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new rating",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/rating/{ratingId}": {
        "put": {
          "operationId": "RatingController.update",
          "parameters": [
            {
              "in": "path",
              "name": "ratingId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditRating"
                }
              }
            },
            "description": "EditRating",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update rating",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "delete": {
          "operationId": "RatingController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "ratingId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove rating",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/rating/{ratingId}/mark-as-reviewed": {
        "put": {
          "operationId": "RatingController.markAsReviewed",
          "parameters": [
            {
              "in": "path",
              "name": "ratingId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Mark rating as reviewed",
          "tags": [
            "Rating"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/request/all": {
        "get": {
          "operationId": "RequestController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRequestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all requests",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/request/current": {
        "get": {
          "operationId": "RequestController.getCurrent",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRequest"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get current request by id",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "delete": {
          "operationId": "RequestController.cancel",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove request",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/request/current/responses": {
        "get": {
          "operationId": "RequestController.getResponses",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseResponseList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get current request responses",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/request/compatible": {
        "get": {
          "operationId": "RequestController.getCompatible",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRequestList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get current request responses",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/request/{requestId}": {
        "get": {
          "operationId": "RequestController.get",
          "parameters": [
            {
              "in": "path",
              "name": "requestId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseRequest"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get request by id",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/request": {
        "post": {
          "operationId": "RequestController.create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRequest"
                }
              }
            },
            "description": "CreateRequest",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new request",
          "tags": [
            "Request"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/service/all": {
        "get": {
          "operationId": "ServiceController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseServiceList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all services",
          "tags": [
            "Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/service/{serviceId}": {
        "get": {
          "operationId": "ServiceController.get",
          "parameters": [
            {
              "in": "path",
              "name": "serviceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseService"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get service by id",
          "tags": [
            "Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "ServiceController.update",
          "parameters": [
            {
              "in": "path",
              "name": "serviceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update service",
          "tags": [
            "Service"
          ],
          "security": [
            {
              "adminToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "$ref": "#/components/schemas/EditService"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "images": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "ServiceController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "serviceId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove service",
          "tags": [
            "Service"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/service": {
        "post": {
          "operationId": "ServiceController.create",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseService"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new service",
          "tags": [
            "Service"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "$ref": "#/components/schemas/CreateService"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "images": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/subscription/all": {
        "get": {
          "operationId": "SubscriptionController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseSubscriptionList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all subscriptions",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}": {
        "get": {
          "operationId": "SubscriptionController.get",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseSubscription"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get subscription by id",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "SubscriptionController.update",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": "Subscription",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update subscription",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        },
        "delete": {
          "operationId": "SubscriptionController.remove",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Remove subscription",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}/invoices/all": {
        "get": {
          "operationId": "SubscriptionController.getAllInvoices",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseInvoiceList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all subscription invoices",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/me/current": {
        "get": {
          "operationId": "SubscriptionController.getCurrent",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseSubscription"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get subscription by id",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/new": {
        "post": {
          "operationId": "SubscriptionController.subscribe",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscribe"
                }
              }
            },
            "description": "Subscribe",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseSubscription"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new subscription",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}/activate": {
        "put": {
          "operationId": "SubscriptionController.activate",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Activate subscription",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}/deactivate": {
        "put": {
          "operationId": "SubscriptionController.deactivate",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Deactivate subscription",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}/change-payment-method": {
        "put": {
          "operationId": "SubscriptionController.changePaymentMethod",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSubscriptionCard"
                }
              }
            },
            "description": "ChangeSubscriptionCard",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Change subscription payment method",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/subscription/{subscriptionId}/change-plan": {
        "put": {
          "operationId": "SubscriptionController.changePlan",
          "parameters": [
            {
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSubscriptionPlan"
                }
              }
            },
            "description": "ChangeSubscriptionPlan",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Change subscription plan",
          "tags": [
            "Subscription"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/support/all": {
        "get": {
          "operationId": "SupportController.getAll",
          "parameters": [
            {
              "in": "query",
              "name": "status",
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/TicketStatus"
                },
                "type": "array"
              }
            },
            {
              "in": "query",
              "name": "archived",
              "schema": {
                "$ref": "#/components/schemas/TicketArchivedFilter"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseTicketList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get all tickets",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/support/me": {
        "get": {
          "operationId": "SupportController.getMyTickets",
          "parameters": [
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseTicketList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get my tickets",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/support/{ticketId}": {
        "get": {
          "operationId": "SupportController.get",
          "parameters": [
            {
              "in": "path",
              "name": "ticketId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseTicket"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get ticket by id",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        },
        "put": {
          "operationId": "SupportController.update",
          "parameters": [
            {
              "in": "path",
              "name": "ticketId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTicket"
                }
              }
            },
            "description": "EditTicket",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Update ticket",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/support": {
        "post": {
          "operationId": "SupportController.create",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Register new ticket",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ticketData": {
                      "$ref": "#/components/schemas/CreateTicketData"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "attachments": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "/support/{ticketId}/archive": {
        "put": {
          "operationId": "SupportController.archive",
          "parameters": [
            {
              "in": "path",
              "name": "ticketId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseBoolean"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Archive ticket",
          "tags": [
            "Support"
          ],
          "security": [
            {
              "adminToken": []
            }
          ]
        }
      },
      "/ticket-message/{ticketId}/with-user": {
        "get": {
          "operationId": "TicketMessageController.getUserMessages",
          "parameters": [
            {
              "in": "path",
              "name": "ticketId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "lastId",
              "schema": {
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "number",
                "description": "Items per page"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "number",
                "description": "Page"
              }
            },
            {
              "in": "query",
              "name": "search",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseTicketMessageList"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Get user ticket messages",
          "tags": [
            "Ticket Message"
          ],
          "security": [
            {
              "userToken": []
            }
          ]
        }
      },
      "/ticket-message/{ticketId}/send": {
        "post": {
          "operationId": "TicketMessageController.send",
          "parameters": [
            {
              "in": "path",
              "name": "ticketId",
              "required": true,
              "schema": {
                "pattern": "[^\\/#\\?]+?",
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiResponseTicketMessage"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Send new ticket message",
          "tags": [
            "Ticket Message"
          ],
          "security": [
            {
              "userToken": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sendTicketMessage": {
                      "$ref": "#/components/schemas/SendMessageBase"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "encoding": {
                  "attachments": {
                    "contentType": "image/png, image/jpeg"
                  }
                }
              }
            }
          }
        }
      }
    },
    "servers": [
      {
        "url": "http://localhost:3333/"
      }
    ],
    "externalDocs": {
      "url": "http://localhost:3333/docs"
    },
    "tags": [
      {
        "name": "Badge"
      },
      {
        "name": "Card"
      },
      {
        "name": "Client"
      },
      {
        "name": "Event"
      },
      {
        "name": "Invoice"
      },
      {
        "name": "Log"
      },
      {
        "name": "Login"
      },
      {
        "name": "Message"
      },
      {
        "name": "Plan"
      },
      {
        "name": "Professional"
      },
      {
        "name": "Professional Service"
      },
      {
        "name": "Proposal"
      },
      {
        "name": "Rating"
      },
      {
        "name": "Request"
      },
      {
        "name": "Response"
      },
      {
        "name": "Service"
      },
      {
        "name": "Subscription"
      },
      {
        "name": "Support"
      },
      {
        "name": "Ticket Message"
      },
      {
        "name": "User"
      },
      {
        "name": "Guest"
      },
      {
        "name": "Bookmark"
      },
      {
        "name": "Sign up"
      },
      {
        "name": "Discover"
      },
      {
        "name": "Admin"
      }
    ]
  }
contentType: yaml
